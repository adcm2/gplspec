# add_executable(Spectral_Element Spectral_Element.cpp)
# target_link_libraries(Spectral_Element PlanetaryModel)

# add_executable(Spectral_Element_Sparse Spectral_Element_Sparse.cpp)
# target_link_libraries(Spectral_Element_Sparse PlanetaryModel)

# add_executable(Spectral_Element_Sparse_Test Spectral_Element_Sparse_Test.cpp)
# target_link_libraries(Spectral_Element_Sparse_Test PlanetaryModel)
# target_link_libraries(Spectral_Element_Sparse_Test FFTWpp)
# target_link_libraries(Spectral_Element_Sparse_Test TomographyModels)

# add_executable(FullSphericalPotential Spherical_Geometry_Potential.cpp)
# # target_compile_features(FullSphericalPotential PUBLIC cxx_std_23)
# target_link_libraries(FullSphericalPotential PlanetaryModel)
# target_link_libraries(FullSphericalPotential FFTWpp)
# target_link_libraries(FullSphericalPotential TomographyModels)

# add_executable(EIGENTEST Eigen_Matrix_Wrapper.cpp)
# target_link_libraries(EIGENTEST PlanetaryModel)
# target_link_libraries(EIGENTEST FFTWpp)

# add_executable(test Test.cpp)
# target_compile_features(test PUBLIC cxx_std_23)
# target_link_libraries(test PlanetaryModel)
# target_link_libraries(test FFTWpp)
# target_link_libraries(test TomographyModels)

# add_executable(AsphericalPotential Aspherical_Geometry_Potential.cpp)
# target_compile_features(AsphericalPotential PUBLIC cxx_std_23)
# target_link_libraries(AsphericalPotential PlanetaryModel)
# target_link_libraries(AsphericalPotential FFTWpp)
# target_link_libraries(AsphericalPotential TomographyModels)

# add_executable(GravityAspherical Aspherical_concise.cpp)
# target_compile_features(GravityAspherical PUBLIC cxx_std_23)
# target_link_libraries(GravityAspherical PlanetaryModel)
# target_link_libraries(GravityAspherical FFTWpp)
# target_link_libraries(GravityAspherical TomographyModels)

# add_executable(crtptest crtptest.cpp)
# target_compile_features(crtptest PUBLIC cxx_std_23)
# target_link_libraries(crtptest Interpolation)


# target_link_libraries(EIGENTEST TomographyModels)

# add_executable(GSHEXAMP Learning_GSHTrans.cpp)
# # target_compile_features(GSHEXAMP PUBLIC cxx_std_23)
# target_link_libraries(GSHEXAMP PlanetaryModel)
# target_link_libraries(GSHEXAMP FFTWpp)
# target_link_libraries(GSHEXAMP TomographyModels)